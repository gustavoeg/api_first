/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.openapi.api;

import com.example.openapi.model.InlineResponse200;
import com.example.openapi.model.Inmueble;
import java.util.List;
import com.example.openapi.model.Solicitud;
import com.example.openapi.model.SolicitudCompleta;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-18T18:46:39.162798100-03:00[America/Buenos_Aires]")
@Validated
@Api(value = "solicitudes", description = "the solicitudes API")
public interface SolicitudesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /solicitudes : Retorna todas las solicitudes
     * Retorna todas las solicitudes requeridas.
     *
     * @param legajoSolicitante El numero de legajo del solicitante. (required)
     * @param legajoRespuesta El numero de legajo del que respondió. (optional)
     * @return Operación correcta y retorno de las solicitudes en formato JSON (status code 200)
     */
    @ApiOperation(value = "Retorna todas las solicitudes", nickname = "solicitudesGet", notes = "Retorna todas las solicitudes requeridas.", response = SolicitudCompleta.class, responseContainer = "List", tags={ "Solicitudes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operación correcta y retorno de las solicitudes en formato JSON", response = SolicitudCompleta.class, responseContainer = "List") })
    @GetMapping(
        value = "/solicitudes",
        produces = { "application/json" }
    )
    default ResponseEntity<List<SolicitudCompleta>> solicitudesGet(@NotNull @ApiParam(value = "El numero de legajo del solicitante.", required = true) @Valid @RequestParam(value = "legajo_solicitante", required = true) Integer legajoSolicitante,@ApiParam(value = "El numero de legajo del que respondió.") @Valid @RequestParam(value = "legajo_respuesta", required = false) Integer legajoRespuesta) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"solicitud\" : { \"id_solicitud\" : 1, \"tipo_mza\" : \"manzana\", \"nro_mza\" : \"123A\", \"tipo_lote\" : \"lote\", \"nro_lote\" : \"15/1\", \"seccion\" : \"A\", \"circunscripcion\" : \"V\", \"barrio\" : \"Belgrano\", \"legajo_solicitud\" : 1520, \"fecha_solicitud\" : \"2023-05-10 18:07:25\" }, \"asignaciones\" : [ { \"id_inmueble\" : 1, \"ruta\" : 100, \"folio\" : 2030 }, { \"id_inmueble\" : 2, \"ruta\" : 100, \"folio\" : 2032 }, { \"id_inmueble\" : 3, \"ruta\" : 100, \"folio\" : 2034 } ], \"respuesta\" : { \"id_solicitud\" : 1, \"respuesta\" : \"A\", \"detalles\" : \"Una observación relevante\", \"legajo_respuesta\" : 3030, \"fecha_respuesta\" : \"2023-05-10 19:18:25\" }, \"rechazo\" : { \"id_solicitud\" : 1, \"causa\" : \"S\" }, \"inmuebles\" : [ { \"id_inmueble\" : 1, \"tipo\" : \"loc\", \"numero-letra\" : \"1\", \"id_solicitud\" : 1 }, { \"id_inmueble\" : 2, \"tipo\" : \"dpto\", \"numero-letra\" : \"A\", \"id_solicitud\" : 2 }, { \"id_inmueble\" : 3, \"tipo\" : \"sc\", \"numero-letra\" : \"2\", \"id_solicitud\" : 3 }, { \"id_inmueble\" : 4, \"tipo\" : \"ppal\", \"numero-letra\" : \"3\", \"id_solicitud\" : 3 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /solicitudes/{id} : Retorna una solicitud
     * Recupera una solicitud específica, con su estado de respuesta.
     *
     * @param id El ID de la solicitud requerida. (required)
     * @return Una solicitud de ruta y folio en formato JSON (status code 200)
     */
    @ApiOperation(value = "Retorna una solicitud", nickname = "solicitudesIdGet", notes = "Recupera una solicitud específica, con su estado de respuesta.", response = SolicitudCompleta.class, tags={ "Solicitudes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Una solicitud de ruta y folio en formato JSON", response = SolicitudCompleta.class) })
    @GetMapping(
        value = "/solicitudes/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<SolicitudCompleta> solicitudesIdGet(@ApiParam(value = "El ID de la solicitud requerida.",required=true) @PathVariable("id") Integer id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"solicitud\" : { \"id_solicitud\" : 1, \"tipo_mza\" : \"manzana\", \"nro_mza\" : \"123A\", \"tipo_lote\" : \"lote\", \"nro_lote\" : \"15/1\", \"seccion\" : \"A\", \"circunscripcion\" : \"V\", \"barrio\" : \"Belgrano\", \"legajo_solicitud\" : 1520, \"fecha_solicitud\" : \"2023-05-10 18:07:25\" }, \"asignaciones\" : [ { \"id_inmueble\" : 1, \"ruta\" : 100, \"folio\" : 2030 }, { \"id_inmueble\" : 2, \"ruta\" : 100, \"folio\" : 2032 }, { \"id_inmueble\" : 3, \"ruta\" : 100, \"folio\" : 2034 } ], \"respuesta\" : { \"id_solicitud\" : 1, \"respuesta\" : \"A\", \"detalles\" : \"Una observación relevante\", \"legajo_respuesta\" : 3030, \"fecha_respuesta\" : \"2023-05-10 19:18:25\" }, \"rechazo\" : { \"id_solicitud\" : 1, \"causa\" : \"S\" }, \"inmuebles\" : [ { \"id_inmueble\" : 1, \"tipo\" : \"loc\", \"numero-letra\" : \"1\", \"id_solicitud\" : 1 }, { \"id_inmueble\" : 2, \"tipo\" : \"dpto\", \"numero-letra\" : \"A\", \"id_solicitud\" : 2 }, { \"id_inmueble\" : 3, \"tipo\" : \"sc\", \"numero-letra\" : \"2\", \"id_solicitud\" : 3 }, { \"id_inmueble\" : 4, \"tipo\" : \"ppal\", \"numero-letra\" : \"3\", \"id_solicitud\" : 3 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /solicitudes/{id}/inmuebles/{id_inmueble} : Elimina los inmuebles de una solicitud
     * Elimina los inmuebles de la solicitud por id.
     *
     * @param id Identificador de la solicitud. (required)
     * @param idInmueble Identificador del inmueble. (required)
     * @return La solicitud fue eliminada correctamente. (status code 204)
     */
    @ApiOperation(value = "Elimina los inmuebles de una solicitud", nickname = "solicitudesIdInmueblesIdInmuebleDelete", notes = "Elimina los inmuebles de la solicitud por id.", tags={ "Solicitudes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "La solicitud fue eliminada correctamente.") })
    @DeleteMapping(
        value = "/solicitudes/{id}/inmuebles/{id_inmueble}"
    )
    default ResponseEntity<Void> solicitudesIdInmueblesIdInmuebleDelete(@ApiParam(value = "Identificador de la solicitud.",required=true) @PathVariable("id") Integer id,@ApiParam(value = "Identificador del inmueble.",required=true) @PathVariable("id_inmueble") Integer idInmueble) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /solicitudes/{id}/inmuebles : Retorna una solicitud
     * Recupera una solicitud específica, con su estado de respuesta.
     *
     * @param id El ID de la solicitud requerida. (required)
     * @param inmueble  (required)
     * @return Se agregaron los inmuebles a la solicitud en formato JSON (status code 200)
     */
    @ApiOperation(value = "Retorna una solicitud", nickname = "solicitudesIdInmueblesPost", notes = "Recupera una solicitud específica, con su estado de respuesta.", response = SolicitudCompleta.class, tags={ "Solicitudes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Se agregaron los inmuebles a la solicitud en formato JSON", response = SolicitudCompleta.class) })
    @PostMapping(
        value = "/solicitudes/{id}/inmuebles",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<SolicitudCompleta> solicitudesIdInmueblesPost(@ApiParam(value = "El ID de la solicitud requerida.",required=true) @PathVariable("id") Integer id,@ApiParam(value = "" ,required=true )  @Valid @RequestBody List<Inmueble> inmueble) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"solicitud\" : { \"id_solicitud\" : 1, \"tipo_mza\" : \"manzana\", \"nro_mza\" : \"123A\", \"tipo_lote\" : \"lote\", \"nro_lote\" : \"15/1\", \"seccion\" : \"A\", \"circunscripcion\" : \"V\", \"barrio\" : \"Belgrano\", \"legajo_solicitud\" : 1520, \"fecha_solicitud\" : \"2023-05-10 18:07:25\" }, \"asignaciones\" : [ { \"id_inmueble\" : 1, \"ruta\" : 100, \"folio\" : 2030 }, { \"id_inmueble\" : 2, \"ruta\" : 100, \"folio\" : 2032 }, { \"id_inmueble\" : 3, \"ruta\" : 100, \"folio\" : 2034 } ], \"respuesta\" : { \"id_solicitud\" : 1, \"respuesta\" : \"A\", \"detalles\" : \"Una observación relevante\", \"legajo_respuesta\" : 3030, \"fecha_respuesta\" : \"2023-05-10 19:18:25\" }, \"rechazo\" : { \"id_solicitud\" : 1, \"causa\" : \"S\" }, \"inmuebles\" : [ { \"id_inmueble\" : 1, \"tipo\" : \"loc\", \"numero-letra\" : \"1\", \"id_solicitud\" : 1 }, { \"id_inmueble\" : 2, \"tipo\" : \"dpto\", \"numero-letra\" : \"A\", \"id_solicitud\" : 2 }, { \"id_inmueble\" : 3, \"tipo\" : \"sc\", \"numero-letra\" : \"2\", \"id_solicitud\" : 3 }, { \"id_inmueble\" : 4, \"tipo\" : \"ppal\", \"numero-letra\" : \"3\", \"id_solicitud\" : 3 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /solicitudes/nuevas : Cantidad de solicitudes sin responder.
     * Recupera la cantidad de solicitudes nuevas sin responder.
     *
     * @return Operación correcta y retorno de la cantidad en formato JSON (status code 200)
     */
    @ApiOperation(value = "Cantidad de solicitudes sin responder.", nickname = "solicitudesNuevasGet", notes = "Recupera la cantidad de solicitudes nuevas sin responder.", response = InlineResponse200.class, tags={ "Solicitudes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operación correcta y retorno de la cantidad en formato JSON", response = InlineResponse200.class) })
    @GetMapping(
        value = "/solicitudes/nuevas",
        produces = { "application/json" }
    )
    default ResponseEntity<InlineResponse200> solicitudesNuevasGet() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"num_solicitudes_nuevas\" : 5 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /solicitudes : Creción de una nueva solicitud de Ruta y Folio
     * Envío de datos para una nueva solicitud de identificación de servicio (ruta y folio)
     *
     * @param solicitud  (required)
     * @return Petición satisfactoria y como resultado se creó la nueva solicitud. (status code 201)
     *         or Datos incorrectos para la solicitud. (status code 400)
     */
    @ApiOperation(value = "Creción de una nueva solicitud de Ruta y Folio", nickname = "solicitudesPost", notes = "Envío de datos para una nueva solicitud de identificación de servicio (ruta y folio)", response = Solicitud.class, tags={ "Solicitudes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Petición satisfactoria y como resultado se creó la nueva solicitud.", response = Solicitud.class),
        @ApiResponse(code = 400, message = "Datos incorrectos para la solicitud.") })
    @PostMapping(
        value = "/solicitudes",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Solicitud> solicitudesPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Solicitud solicitud) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"id_solicitud\" : 1, \"tipo_mza\" : \"manzana\", \"nro_mza\" : \"123A\", \"tipo_lote\" : \"lote\", \"nro_lote\" : \"15/1\", \"seccion\" : \"A\", \"circunscripcion\" : \"V\", \"barrio\" : \"Belgrano\", \"legajo_solicitud\" : 1520, \"fecha_solicitud\" : \"2023-05-10 18:07:25\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /solicitudes/rechazadas : Recuperar las solicitudes rechazadas
     * Recupera todas las solicitudes que fueron rechazadas.
     *
     * @param legajoSolicitante El numero de legajo del solicitante. (optional)
     * @return Operación correcta y retorno de las solicitudes en formato JSON (status code 200)
     */
    @ApiOperation(value = "Recuperar las solicitudes rechazadas", nickname = "solicitudesRechazadasGet", notes = "Recupera todas las solicitudes que fueron rechazadas.", response = SolicitudCompleta.class, responseContainer = "List", tags={ "Solicitudes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operación correcta y retorno de las solicitudes en formato JSON", response = SolicitudCompleta.class, responseContainer = "List") })
    @GetMapping(
        value = "/solicitudes/rechazadas",
        produces = { "application/json" }
    )
    default ResponseEntity<List<SolicitudCompleta>> solicitudesRechazadasGet(@ApiParam(value = "El numero de legajo del solicitante.") @Valid @RequestParam(value = "legajo_solicitante", required = false) Integer legajoSolicitante) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"solicitud\" : { \"id_solicitud\" : 1, \"tipo_mza\" : \"manzana\", \"nro_mza\" : \"123A\", \"tipo_lote\" : \"lote\", \"nro_lote\" : \"15/1\", \"seccion\" : \"A\", \"circunscripcion\" : \"V\", \"barrio\" : \"Belgrano\", \"legajo_solicitud\" : 1520, \"fecha_solicitud\" : \"2023-05-10 18:07:25\" }, \"asignaciones\" : [ { \"id_inmueble\" : 1, \"ruta\" : 100, \"folio\" : 2030 }, { \"id_inmueble\" : 2, \"ruta\" : 100, \"folio\" : 2032 }, { \"id_inmueble\" : 3, \"ruta\" : 100, \"folio\" : 2034 } ], \"respuesta\" : { \"id_solicitud\" : 1, \"respuesta\" : \"A\", \"detalles\" : \"Una observación relevante\", \"legajo_respuesta\" : 3030, \"fecha_respuesta\" : \"2023-05-10 19:18:25\" }, \"rechazo\" : { \"id_solicitud\" : 1, \"causa\" : \"S\" }, \"inmuebles\" : [ { \"id_inmueble\" : 1, \"tipo\" : \"loc\", \"numero-letra\" : \"1\", \"id_solicitud\" : 1 }, { \"id_inmueble\" : 2, \"tipo\" : \"dpto\", \"numero-letra\" : \"A\", \"id_solicitud\" : 2 }, { \"id_inmueble\" : 3, \"tipo\" : \"sc\", \"numero-letra\" : \"2\", \"id_solicitud\" : 3 }, { \"id_inmueble\" : 4, \"tipo\" : \"ppal\", \"numero-letra\" : \"3\", \"id_solicitud\" : 3 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
